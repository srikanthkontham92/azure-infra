name: Test Workflow

on:
  schedule:
    # From Monday to Friday at 6:00 AM
    - cron: "0 6 * * 1-5"
  workflow_dispatch:
    inputs:
      actions:
        description: "Action Options"
        default: "all"
        type: choice
        options:
          - terraform
          - docker-image
          - kustomize
          - all
      option:
        description: "Terraform option"
        default: "apply"
        type: choice
        options:
          - plan
          - apply
          - destroy
      environment:
        description: "Environment to deploy applications to"
        default: "qa"
        type: choice
        options:
          - dev
          - qa

permissions:
  id-token: write
  contents: read

jobs:
  terraform-execute:
    name: Provision Infrastructure
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.actions == 'terraform' || github.event.inputs.actions == 'all' }}
    env:
      TF_VERSION: 1.7.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform init
        run: terraform init

      - name: Terraform plan
        if: ${{ github.event.inputs.option == 'plan' }}
        run: terraform plan

      - name: Terraform apply
        if: ${{ github.event.inputs.option == 'apply' }}
        run: terraform apply -auto-approve

      - name: Terraform destroy
        if: ${{ github.event.inputs.option == 'destroy' }}
        run: terraform destroy -auto-approve

  setup-env:
    name: Setup Environment
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.actions == 'all' }}
    needs: terraform-execute
    steps:
      - uses: actions/checkout@v4
      - name: Run setup script
        run: ./scripts/setup-env.sh

  create-app-secrets:
    name: Create Application Secrets
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.actions == 'all' }}
    needs: setup-env
    steps:
      - uses: actions/checkout@v4
      - name: Create secrets for apps
        run: ./scripts/create-app-secrets.sh

  create-grafana-secrets:
    name: Create Grafana Secrets
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.actions == 'all' }}
    needs: setup-env
    steps:
      - uses: actions/checkout@v4
      - name: Create Grafana secrets
        run: ./scripts/create-grafana-secrets.sh

  deploy-argocd:
    name: Deploy ArgoCD
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.actions == 'all' }}
    needs: [setup-env, create-app-secrets, create-grafana-secrets]
    steps:
      - uses: actions/checkout@v4
      - name: Deploy ArgoCD
        run: ./scripts/deploy-argocd.sh

  publish-images:
    name: Publish Docker Images
    runs-on: ubuntu-latest
    needs: terraform-execute
    if: ${{ github.event.inputs.actions == 'docker-image' || github.event.inputs.actions == 'all' }}
    steps:
      - uses: actions/checkout@v4
      - name: Publish Docker images
        run: ./scripts/publish-docker-images.sh

  deploy-kustomize:
    name: Deploy Kustomize
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.actions == 'kustomize' || github.event.inputs.actions == 'all' }}
    needs: [terraform-execute, publish-images, setup-env]
    steps:
      - uses: actions/checkout@v4
      - name: Deploy Kustomize
        run: ./scripts/deploy-kustomize.sh
